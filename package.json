{
  "name": "bluestream",
  "version": "0.0.0-development",
  "description": "A collection of streams that work well with promises (through, map, reduce). Through2 with promise support",
  "main": "dist",
  "types": "dist/index.d.ts",
  "repository": "git@github.com:bustle/bluestream.git",
  "homepage": "https://github.com/bustle/bluestream",
  "runkitExampleFilename": "example.js",
  "scripts": {
    "test": "npm run unit-test && npm run lint",
    "unit-test": "mocha",
    "lint": "eslint lib test",
    "build": "babel lib/ -d dist/ && cp ./types/* ./dist/.",
    "prepublish": "npm run build",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post"
  },
  "keywords": [
    "through",
    "through2",
    "through2-concurrent",
    "promise",
    "stream",
    "readable",
    "transform",
    "writable",
    "transform streams",
    "bluebird"
  ],
  "author": "reconbot",
  "license": "MIT",
  "dependencies": {},
  "devDependencies": {
    "@types/node": "^9.4.6",
    "babel-cli": "^6.26.0",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-preset-env": "^1.6.0",
    "babel-register": "^6.26.0",
    "chai": "^4.1.0",
    "eslint": "^4.3.0",
    "eslint-config-standard": "^10.2.1",
    "eslint-plugin-import": "^2.7.0",
    "eslint-plugin-mocha": "^4.11.0",
    "eslint-plugin-node": "^5.1.1",
    "eslint-plugin-promise": "^3.5.0",
    "eslint-plugin-standard": "^3.0.1",
    "mocha": "^3.5.0",
    "semantic-release": "^8.2.0",
    "split2": "^2.2.0"
  },
  "engines": {
    "node": ">=6"
  },
  "compilerOptions": {
    "moduleResolution": "node"
  },
  "eslintConfig": {
    "env": {
      "node": true,
      "mocha": true
    },
    "globals": {
      "assert": false
    },
    "extends": [
      "standard"
    ],
    "plugins": [
      "mocha"
    ],
    "rules": {
      "curly": [
        "error",
        "all"
      ],
      "no-console": "error",
      "mocha/no-skipped-tests": "error",
      "mocha/no-exclusive-tests": "error",
      "no-return-await": "error"
    }
  }
}
